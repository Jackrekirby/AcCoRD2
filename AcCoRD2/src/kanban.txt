// Questions
// Can zero reaction molecules be placed inside a child region?
// Does the volume used to calculaet the next reaciton time include that of children as well?
// I assume reactions in a region only start occuring at a regions start time?
// if a molecule is generated and is inside a hgih prioprity region should have flag which specifies if molecule placement should fail
// If the molecule can participate in multiple non-surface first order reactions, then the probability of reaction c occurring is[15, Eq. (14)].
// Is this for reactions within the same region, or all regions?
// can a reaction have multiple products of the same molecule type and what format is it?
// couldnt products be placed outside the region if unbind radius is huge?
// Can a point active actor with random release time be a point source because release time calcualtion includes volume of actor
// for active active with random release times it says only 1 molecule is released per release time, does that mean then only one molecule type can be
// released from an active actor at once?
// If an active actor is defined over multiple regions is a region randomly selected to place a molecule in based on it volume, and does the volume
// ignore that removed by child regions?
// can an active actor record its release times? (currently only passive)
// active actors with a random release time do not have a bit sequence?
// how did u implement the number of event actions. Do you always set max actions by doing simulation_length / time_step
// for an active actor which is a surface do you use the area instead of the volume to calaculate the release_coefficient for a random time active actor
// When you update diffusion propensities do you return the delta?
// When you go through possible reactions you can store them in a tree like structure to reduce searches further.
// did you use a math vec struct?
// do you store a list of objects to be updated when a molecule count is updated?
// can i talk about what makes the original code < ..
// when molecules are added to a subvolume outside of its action time if the propensity updated every time a molecule is added or for example
// do you let multiple molecules be added then only update those subvolumes requiring an update
// updating event time does not work if time has not changed and/or old propensity = 0; 
// --- SetTime(current_time + (old_propensity / reaction_propensity) * (time - current_time));

// Investigate
// If a regions start time is at 0.5 seconds and time step is 1 then shouldnt the regions first event be at 1.5 seconds?
// how to stop two basic shapes being generated when microscopic surface shapes inherit from generating and collision shapes (virtual inheritance)
// if the reaction rate is for example 1 is that 1 molecule produced per second or all products per second?
// when molecules are added to regions each high priority neighbour should be checked to see if molecules can be added to them.
// Alot of relation checking could be done outside the class by an external class which simply returns a vector of regions which match.
// E.g. Regions* = RelationFinder.GetRegionsWhichOverlap(shape). Then ActiveActor.AddRegions(Regions*)
// E.g. RelationFinder.IsRelationShipValid(region_a, region_b, relationship)
// could stick I/O on a seperate thread so can write to binary files which simulation runs next step. Would require a copy of the position vector or make it lockable

// if the surface type between neighbours is not none then no point in adding relationship: Answer: Wrong as the default surface may be none and so the neighboru relationship
// provides the exception

// Learning Plan
// Learnt the importance of reserving as allowing a vector to resize invalidates pointers.
// Learnt how to use visual studio performance profiler

// KANBAN CHART =====================================================================================================================================

// DONE
// add cylinders
// change circle collision to const
// consider converting planes into single non-virtual class
// is neighbouring functions should return boolean
// only is partially neighbouring function of boxes needs to calculate area
// add as seperate function. e.g. CalculateAreaBetweenNeighbouringBoxes()
// rename relation surface shape to shape 2d
// add vector operation - (scalar)
// may need to seperate microscopic surface shape from microscopic region shapes as regions cannot be typical surfaces?
// --- currently microscopic surface shape is only for region shapes. However as regions must now be constructed using
// --- derived classes passing an invalid surface shape to a region is no longer possible.
// --- i.e. all regions shapes are surface shapes but not all surface shapes are regions shapes.
// make it easier to save region shapes in region.json. E.g. environment.saveRegions
// regions per shape to avoid unique pointer
// add zeroth order reactions for microscopic regions
// rename grid, subvolume and region 2 to _
// need to find where i use iterator loop and set iterator to another. It may be it& = it and may need to be it = it + 1. (LINK GRIDS?)
// make all shapes have virtual inheritance of basic shapes
// consider redoing reactions with reaction manager as all regions import reactions from it
// split meso classes
// ensure consistent reaction_factor reaction_coefficient_naming
// rename events to reactions
// make generating shapes virtual (only boxes, spheres and cylinders)
// reaction testing in mesoscopic regions
// diffusion between multiple mesoscopic regions
// make SubvolumeEvent class
// plot active and passive actors in MATLAB

// CANCELLED
// add clip function // wrap was clip
// add wrap function // not require atm
// add inrange function // too many variants (inclusive, exclusive, return double, return vec3d)
// consider converting cylinder into class per axis
// consider using flatten relation method for box and spheres (Flattening does not work on spheres)
// could use factory to build regions so regions dont have to be publically available in environment (factory no longer needed due to derived class)
// update test envrionments to new format (consider switch statement?) (format keep changing)
// abstract event queue (not easily possible, offers much more flexibility without abstraction)
// add simulation dir, seed dir and realisation dir for envrionment (required renaming of existing functions)

// IN PROGRESS
// consider adding generate bounding box and rect to all shapes
// consider multiple constructors for shapes so you can generate shapes using other shapes
// add a GetBasicShape() to each shape type so you can write the basic shape of a region to json

// TO DO (next)
// json input
// hybrid diffusion <<<<<<<<<<<<<<<<<<

// passive and active actors in mesoscopic regions
// review / remove redundant code in meso propensity checking
// seperate public and private functions, particularly for active actors ane mesoscopic classes

// TO DO (Imminent)
// add subvolume neighbour check
// add subvolume removal / overlap check
// add meso-micro transition
// add set event time past simulation time.
// add generation checking to regions so youngest regions can be sorted first for collision checking 
// --- (important for surfaces ! surfaces should always be checked first and assume surfaces wont be within surface)
// add != vec checks
// add scalar boolean checks for vector
// add error checking for ids (and other times when creating vectors)
// avoid requiring other types, instead pass arguments with run function. A child should be unaware of its parent as much as possible
// add function vector<Grid*> GetProductsGrids(vector ids)
// ability to add multiple of a type of reactant
// Need to remove unnecessary headers by pointing to seperate variables instead of 
// rename GetTime() to GetEventTime()
// surface type per grid
// instead of saving no shapes for shapeless regions save all the regions which the observer links to. Will require reformatting.
// Reformat actor json to allow for multiple shapes per actor.
// Make base reaction class with derived VolumeReaction and SurfaceReaction

// TO DO (Large Tasks)
// surfaces - reaction surfaces (first order), membranes, adsorpsion, absorption 
// active actors
// reactions

// TO DO (Not Imminent)
// add surface and shape3d relation checking (isneighbouring, isenvelopedby)
// add default cycles for check molecule path
// could break environment class up into RelationShipManager
// consider adding limited_vectors which are vectors where only certain ints upto a given value are allowed.
// consider adding fixed_vectors which are vectors which have fixed max capacity.
// MAY be able to make second order reactions more efficient by seperating links between internal and external subvolumes
// check whether reactions can be defined in non ascending order
// make functions more descriptive (GetRegions and GetRegionIDs)
// consider passing objects into constructor via const reference to avoid including headers in headers
// ensure consistent to ToJson to_json
// check json works
// ensure consistency between vec2 and vec3
// json / spdlog should print faces of 3d shapes
// check cpp files dont have #pragma once
// NEED TO WARN IF CANNOT WRITE TO FILE / DELETE SEED FOLDER
// find location where i have repeated a scalar to construct a vec and use new scalar constructor

// BUGS
// 1. WHY WERE RECENT MOLECULES AHEAD OF EVENT TIME IF BOTH REGIONS HAVE THE SAME TIME STEP AND OCCUR
// AT THE SAME TIME?
// ANSWER: Recent molecules were being added to the next event time rather than the current one
// Confusion lies in that a region time is updated before the molecule are.
// i.e. region updates its next event time from 1s to 2s. Then at 2s the event from 1 to 2 occur. 
// At the end of the update all molecules should have caught up to 2s.
// 2. Passive Actors cannot be placed into vector as the vector cannot deconstruct.
// FIXED 19/12/20
// 3. Why are molecules reflecting too many times when a cylinder spans across another cylinder?
// Not error but a result of region walls being too close together.
// Capped number of interactions before molecule is placed at last intersection
// 4. Found bug where positions were only being written every other observation for shaped passive actors?
// FIXED 19/12/20

// RESEARCH
// custom destructor
// modules

// KANBAN CHART =====================================================================================================================================
